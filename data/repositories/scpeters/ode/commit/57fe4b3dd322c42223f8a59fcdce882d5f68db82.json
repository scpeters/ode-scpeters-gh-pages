{"rendered": {"message": {"raw": "dGeomRaySet() speedup by Joe Ante <joe@uti.is>.  original email below:\n-----------------------------------------------------------------\nHi,\n\nCan someone check this into cvs.\n\ndGeomRaySet has been a profiled performance bottleneck in a scene where I\ndid a large amount of raycasts.\n\nReplace dGeomRaySet  with the following function:\n\nvoid dGeomRaySet (dGeomID g, dReal px, dReal py, dReal pz,\n          dReal dx, dReal dy, dReal dz)\n{\n  dUASSERT (g && g->type == dRayClass,\"argument not a ray\");\n  dReal* rot = g->R;\n  dReal* pos = g->pos;\n  pos[0] = px;\n  pos[1] = py;\n  pos[2] = pz;\n\n  rot[0*4+2] = dx;\n  rot[1*4+2] = dy;\n  rot[2*4+2] = dz;\n  dGeomMoved (g);\n}\n\nIt is tested and seems to work with all colliders.\n\nJoe Ante", "markup": "markdown", "html": "<h2 id=\"markdown-header-dgeomrayset-speedup-by-joe-ante-amp106amp111amp101amp64amp117amp116amp105amp46amp105amp115-original-email-below\">dGeomRaySet() speedup by Joe Ante <a href=\"mailto:joe@uti.is\">&#106;&#111;&#101;&#64;&#117;&#116;&#105;&#46;&#105;&#115;</a>.  original email below:</h2>\n<p>Hi,</p>\n<p>Can someone check this into cvs.</p>\n<p>dGeomRaySet has been a profiled performance bottleneck in a scene where I<br />\ndid a large amount of raycasts.</p>\n<p>Replace dGeomRaySet  with the following function:</p>\n<p>void dGeomRaySet (dGeomID g, dReal px, dReal py, dReal pz,<br />\n          dReal dx, dReal dy, dReal dz)<br />\n{<br />\n  dUASSERT (g &amp;&amp; g-&gt;type == dRayClass,\"argument not a ray\");<br />\n  dReal<em> rot = g-&gt;R;<br />\n  dReal</em> pos = g-&gt;pos;<br />\n  pos[0] = px;<br />\n  pos[1] = py;<br />\n  pos[2] = pz;</p>\n<p>rot[0<em>4+2] = dx;<br />\n  rot[1</em>4+2] = dy;<br />\n  rot[2*4+2] = dz;<br />\n  dGeomMoved (g);<br />\n}</p>\n<p>It is tested and seems to work with all colliders.</p>\n<p>Joe Ante</p>", "type": "rendered"}}, "hash": "57fe4b3dd322c42223f8a59fcdce882d5f68db82", "repository": {"links": {"self": {"href": "data/repositories/scpeters/ode.json"}, "html": {"href": "#!/scpeters/ode"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fa646312-54cc-4063-8d95-218397b3f80c}ts=c_plus_plus"}}, "type": "repository", "name": "ODE", "full_name": "scpeters/ode", "uuid": "{fa646312-54cc-4063-8d95-218397b3f80c}"}, "links": {"self": {"href": "data/repositories/scpeters/ode/commit/57fe4b3dd322c42223f8a59fcdce882d5f68db82.json"}, "comments": {"href": "data/repositories/scpeters/ode/commit/57fe4b3dd322c42223f8a59fcdce882d5f68db82/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/patch/57fe4b3dd322c42223f8a59fcdce882d5f68db82"}, "html": {"href": "#!/scpeters/ode/commits/57fe4b3dd322c42223f8a59fcdce882d5f68db82"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/diff/57fe4b3dd322c42223f8a59fcdce882d5f68db82"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/commit/57fe4b3dd322c42223f8a59fcdce882d5f68db82/approve"}, "statuses": {"href": "data/repositories/scpeters/ode/commit/57fe4b3dd322c42223f8a59fcdce882d5f68db82/statuses_page=1.json"}}, "author": {"raw": "Adam D. Moss", "type": "author"}, "summary": {"raw": "dGeomRaySet() speedup by Joe Ante <joe@uti.is>.  original email below:\n-----------------------------------------------------------------\nHi,\n\nCan someone check this into cvs.\n\ndGeomRaySet has been a profiled performance bottleneck in a scene where I\ndid a large amount of raycasts.\n\nReplace dGeomRaySet  with the following function:\n\nvoid dGeomRaySet (dGeomID g, dReal px, dReal py, dReal pz,\n          dReal dx, dReal dy, dReal dz)\n{\n  dUASSERT (g && g->type == dRayClass,\"argument not a ray\");\n  dReal* rot = g->R;\n  dReal* pos = g->pos;\n  pos[0] = px;\n  pos[1] = py;\n  pos[2] = pz;\n\n  rot[0*4+2] = dx;\n  rot[1*4+2] = dy;\n  rot[2*4+2] = dz;\n  dGeomMoved (g);\n}\n\nIt is tested and seems to work with all colliders.\n\nJoe Ante", "markup": "markdown", "html": "<h2 id=\"markdown-header-dgeomrayset-speedup-by-joe-ante-amp106amp111amp101amp64amp117amp116amp105amp46amp105amp115-original-email-below\">dGeomRaySet() speedup by Joe Ante <a href=\"mailto:joe@uti.is\">&#106;&#111;&#101;&#64;&#117;&#116;&#105;&#46;&#105;&#115;</a>.  original email below:</h2>\n<p>Hi,</p>\n<p>Can someone check this into cvs.</p>\n<p>dGeomRaySet has been a profiled performance bottleneck in a scene where I<br />\ndid a large amount of raycasts.</p>\n<p>Replace dGeomRaySet  with the following function:</p>\n<p>void dGeomRaySet (dGeomID g, dReal px, dReal py, dReal pz,<br />\n          dReal dx, dReal dy, dReal dz)<br />\n{<br />\n  dUASSERT (g &amp;&amp; g-&gt;type == dRayClass,\"argument not a ray\");<br />\n  dReal<em> rot = g-&gt;R;<br />\n  dReal</em> pos = g-&gt;pos;<br />\n  pos[0] = px;<br />\n  pos[1] = py;<br />\n  pos[2] = pz;</p>\n<p>rot[0<em>4+2] = dx;<br />\n  rot[1</em>4+2] = dy;<br />\n  rot[2*4+2] = dz;<br />\n  dGeomMoved (g);<br />\n}</p>\n<p>It is tested and seems to work with all colliders.</p>\n<p>Joe Ante</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "6c24c4254a958eec9d8cc6899dfa55099db178bf", "type": "commit", "links": {"self": {"href": "data/repositories/scpeters/ode/commit/6c24c4254a958eec9d8cc6899dfa55099db178bf.json"}, "html": {"href": "#!/scpeters/ode/commits/6c24c4254a958eec9d8cc6899dfa55099db178bf"}}}], "date": "2004-05-28T15:28:42+00:00", "message": "dGeomRaySet() speedup by Joe Ante <joe@uti.is>.  original email below:\n-----------------------------------------------------------------\nHi,\n\nCan someone check this into cvs.\n\ndGeomRaySet has been a profiled performance bottleneck in a scene where I\ndid a large amount of raycasts.\n\nReplace dGeomRaySet  with the following function:\n\nvoid dGeomRaySet (dGeomID g, dReal px, dReal py, dReal pz,\n          dReal dx, dReal dy, dReal dz)\n{\n  dUASSERT (g && g->type == dRayClass,\"argument not a ray\");\n  dReal* rot = g->R;\n  dReal* pos = g->pos;\n  pos[0] = px;\n  pos[1] = py;\n  pos[2] = pz;\n\n  rot[0*4+2] = dx;\n  rot[1*4+2] = dy;\n  rot[2*4+2] = dz;\n  dGeomMoved (g);\n}\n\nIt is tested and seems to work with all colliders.\n\nJoe Ante", "type": "commit", "git_hash": "9108241787d3b3aaebb3ce6fc38989bd534bad27", "tags": null, "branches": "ode"}