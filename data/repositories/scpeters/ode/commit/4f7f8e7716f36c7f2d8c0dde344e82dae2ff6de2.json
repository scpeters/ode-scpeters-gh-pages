{"rendered": {"message": {"raw": "Rewritten hash table management algorithm to make the following fixes:\nFix: program did not search for key match if hash table bucket was full\nFix: only lower 8 bits of 32 bits available were used for hash table bucket selection\nFix: possible loss of input because of converting of input coordinate values to integers\nImprovement: better bit distribution in hash value\nFix: different contacts could be merged together because of hash collision unchecked\nAlso, the new implementation allowed the following fix:\nFix: the rest of contacts were ignored if all contact slots were already occupied instead of trying to merge them with some of matching previous contacts", "markup": "markdown", "html": "<p>Rewritten hash table management algorithm to make the following fixes:<br />\nFix: program did not search for key match if hash table bucket was full<br />\nFix: only lower 8 bits of 32 bits available were used for hash table bucket selection<br />\nFix: possible loss of input because of converting of input coordinate values to integers<br />\nImprovement: better bit distribution in hash value<br />\nFix: different contacts could be merged together because of hash collision unchecked<br />\nAlso, the new implementation allowed the following fix:<br />\nFix: the rest of contacts were ignored if all contact slots were already occupied instead of trying to merge them with some of matching previous contacts</p>", "type": "rendered"}}, "hash": "4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2", "repository": {"links": {"self": {"href": "data/repositories/scpeters/ode.json"}, "html": {"href": "#!/scpeters/ode"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fa646312-54cc-4063-8d95-218397b3f80c}ts=c_plus_plus"}}, "type": "repository", "name": "ODE", "full_name": "scpeters/ode", "uuid": "{fa646312-54cc-4063-8d95-218397b3f80c}"}, "links": {"self": {"href": "data/repositories/scpeters/ode/commit/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2.json"}, "comments": {"href": "data/repositories/scpeters/ode/commit/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/patch/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2"}, "html": {"href": "#!/scpeters/ode/commits/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/diff/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/commit/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2/approve"}, "statuses": {"href": "data/repositories/scpeters/ode/commit/4f7f8e7716f36c7f2d8c0dde344e82dae2ff6de2/statuses_page=1.json"}}, "author": {"raw": "Oleh Derevenko", "type": "author", "user": {"display_name": "Oleh Derevenko", "uuid": "{414c6c46-b4fd-47dd-a1b2-876875989914}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B414c6c46-b4fd-47dd-a1b2-876875989914%7D"}, "html": {"href": "https://bitbucket.org/%7B414c6c46-b4fd-47dd-a1b2-876875989914%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/initials/OD-0.png"}}, "nickname": "oleh_derevenko", "type": "user", "account_id": "557058:b4b5118e-a5a1-473e-921a-63da63963017"}}, "summary": {"raw": "Rewritten hash table management algorithm to make the following fixes:\nFix: program did not search for key match if hash table bucket was full\nFix: only lower 8 bits of 32 bits available were used for hash table bucket selection\nFix: possible loss of input because of converting of input coordinate values to integers\nImprovement: better bit distribution in hash value\nFix: different contacts could be merged together because of hash collision unchecked\nAlso, the new implementation allowed the following fix:\nFix: the rest of contacts were ignored if all contact slots were already occupied instead of trying to merge them with some of matching previous contacts", "markup": "markdown", "html": "<p>Rewritten hash table management algorithm to make the following fixes:<br />\nFix: program did not search for key match if hash table bucket was full<br />\nFix: only lower 8 bits of 32 bits available were used for hash table bucket selection<br />\nFix: possible loss of input because of converting of input coordinate values to integers<br />\nImprovement: better bit distribution in hash value<br />\nFix: different contacts could be merged together because of hash collision unchecked<br />\nAlso, the new implementation allowed the following fix:<br />\nFix: the rest of contacts were ignored if all contact slots were already occupied instead of trying to merge them with some of matching previous contacts</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "d9513415563a9c24dccef4791917d4e191a2fa5c", "type": "commit", "links": {"self": {"href": "data/repositories/scpeters/ode/commit/d9513415563a9c24dccef4791917d4e191a2fa5c.json"}, "html": {"href": "#!/scpeters/ode/commits/d9513415563a9c24dccef4791917d4e191a2fa5c"}}}], "date": "2007-09-20T17:21:09+00:00", "message": "Rewritten hash table management algorithm to make the following fixes:\nFix: program did not search for key match if hash table bucket was full\nFix: only lower 8 bits of 32 bits available were used for hash table bucket selection\nFix: possible loss of input because of converting of input coordinate values to integers\nImprovement: better bit distribution in hash value\nFix: different contacts could be merged together because of hash collision unchecked\nAlso, the new implementation allowed the following fix:\nFix: the rest of contacts were ignored if all contact slots were already occupied instead of trying to merge them with some of matching previous contacts", "type": "commit", "git_hash": "b70429e1282dab29f933116940205d054fac67ad", "tags": null, "branches": "default"}