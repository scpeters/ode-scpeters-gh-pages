{"rendered": {"message": {"raw": "A simple trimesh/plane collider which returns the first n points that penetrate the plane. Ideally this would return the first n _deepest_ penetrations, and use some sort of temporal coherence to optimise for the fact that planes aren't placeable. This is however a working start.", "markup": "markdown", "html": "<p>A simple trimesh/plane collider which returns the first n points that penetrate the plane. Ideally this would return the first n <em>deepest</em> penetrations, and use some sort of temporal coherence to optimise for the fact that planes aren't placeable. This is however a working start.</p>", "type": "rendered"}}, "hash": "6d972057a82cb797a6c42bb636ef44458a098a24", "repository": {"links": {"self": {"href": "data/repositories/scpeters/ode.json"}, "html": {"href": "#!/scpeters/ode"}, "avatar": {"href": "data/bytebucket.org/ravatar/{fa646312-54cc-4063-8d95-218397b3f80c}ts=c_plus_plus"}}, "type": "repository", "name": "ODE", "full_name": "scpeters/ode", "uuid": "{fa646312-54cc-4063-8d95-218397b3f80c}"}, "links": {"self": {"href": "data/repositories/scpeters/ode/commit/6d972057a82cb797a6c42bb636ef44458a098a24.json"}, "comments": {"href": "data/repositories/scpeters/ode/commit/6d972057a82cb797a6c42bb636ef44458a098a24/comments_page=1.json"}, "patch": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/patch/6d972057a82cb797a6c42bb636ef44458a098a24"}, "html": {"href": "#!/scpeters/ode/commits/6d972057a82cb797a6c42bb636ef44458a098a24"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/diff/6d972057a82cb797a6c42bb636ef44458a098a24"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/scpeters/ode/commit/6d972057a82cb797a6c42bb636ef44458a098a24/approve"}, "statuses": {"href": "data/repositories/scpeters/ode/commit/6d972057a82cb797a6c42bb636ef44458a098a24/statuses_page=1.json"}}, "author": {"raw": "David Walters", "type": "author"}, "summary": {"raw": "A simple trimesh/plane collider which returns the first n points that penetrate the plane. Ideally this would return the first n _deepest_ penetrations, and use some sort of temporal coherence to optimise for the fact that planes aren't placeable. This is however a working start.", "markup": "markdown", "html": "<p>A simple trimesh/plane collider which returns the first n points that penetrate the plane. Ideally this would return the first n <em>deepest</em> penetrations, and use some sort of temporal coherence to optimise for the fact that planes aren't placeable. This is however a working start.</p>", "type": "rendered"}, "participants": [], "parents": [{"hash": "dd37ac00e85a3aaf95b0d1106e8473c4c36aaa5d", "type": "commit", "links": {"self": {"href": "data/repositories/scpeters/ode/commit/dd37ac00e85a3aaf95b0d1106e8473c4c36aaa5d.json"}, "html": {"href": "#!/scpeters/ode/commits/dd37ac00e85a3aaf95b0d1106e8473c4c36aaa5d"}}}], "date": "2006-07-07T14:51:51+00:00", "message": "A simple trimesh/plane collider which returns the first n points that penetrate the plane. Ideally this would return the first n _deepest_ penetrations, and use some sort of temporal coherence to optimise for the fact that planes aren't placeable. This is however a working start.", "type": "commit", "git_hash": "4be331e22299ec948d58814c001189e044d5523a", "tags": null, "branches": "default"}